language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_fab06ec96dc4_key -iv $encrypted_fab06ec96dc4_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: sjC9Jp7A/2DtxvlhsFcmHpuQK7LBXEvHj2SiBw1m3IMi726AYrj2OtLvbX3aqsA7f3nux/YEdr4gA1zhrLYnWCLWcOpQUo9VhcRppxTqIw/PqoCwbsVemWqGqZSeng7gZFhNuD2437LA6KvhJ3jPkiDJykcLpofqck9jAdb51JOdX0eU2qne0Ecqz/WRplzR/88Eh6FelIjnVb94ZKgh4MLqaDF1t2M3Gy/VTd9KhcyB37wiS9XZU6WCsPGVTR/ivGrFTr3yWzn0hj2CwzYKB+/gyMx+yLJKBc3KeiRZXhVm0GgI88yfYze8sX0Dz5/RATzFo+5D2vrn4L+tQ/WgenC7qHImKpnjTZHnfbuRAFf0G2XzwaOUxrQ6XNReN/zlltNahxDBqg6ZE0Cle83UY2+rgrlvVdW8FJloNHb+/BtMpMreYOpznza/6665TAh4ho3sgN6bAoxqlIzrYS0tHkr/qZJLhGpNIHDYRN9PMXcjVYL1DGO6x8oLWPxEtnW0h53aVVSojjXYnAA+v1ITUae5RUXFguwamwAbkDhgVMveneQMBmFnA7YH/nD381b+9kfZclKEGITJz5wDEJioEf4h9ioKQWCLOrvC6qucNZ7b4kNFbl24F+qDCpQPXHhgV8/JBi7xI9OVGsRjRzA/SfOwUanianOzSZO/vlWd+VY=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: QnBku+OZEGA7OfHwcgQbpu+ETrP4vobuhIr3bi/3nePbvt77rkekxO1va4tXxlVnUsL7DBe9EXAhmCSz3lpCb5zqHgQ/b4pHHpSOc5l1SQOMb87Y0tLJv6OSSrH1fvKBSpW3RSqvqNWRJHExBk+8Uv7rb3NxCpv6nHV+VgcaRzWevYYudm5bVUu0gH/xjsklf754J3l/seiExEGeOJqy03JkebWdczIHhgQFsPvERGVWeur7/yN6tGykoeraTw5CRtuC+tghPhAX5TrqezHSCyHfS9YLfn7ZYLW9yNxCO4STTzA//arn0zXV43Jp1pZUYsvxnuNq4nGjvmJ6XSqg2ZHNtRnRh2o0jcGYW71eXXF+W8Wjniz7mZlbsPMsgOkBoLXnqJ9UxjtXpPKIzlG8U7c+zblGKXU1cegtdcN1ur6uOzysAC7AiabGYUPXyKM6L7KT/UpvK2tx7MZEuhbUKy7NSrRm+KOfA55+AF66hGA79/YQazguH9OCtSAAaAa5vHLxdJ6yHkiT70tPCDT238qmSM8/F+6+nyKpuAc60wyNuK/vMTBFy2Z4bFcKN4z78SJeNGVDWbO/5PwWlvgZ2niBfjLg8PeC8r9kuBKSzUUodwRPcGxPsLJWentKxoub3m9A15ufEx64hY2gnef6jsV2l21nJPKRT7jvnIAEkhY=
  - secure: ol1SfYDSkFl4s0aHtK9WViUnzwq8DAwqqJaooT+lwPeKhok01DRkwBJjtY2twRX5Mn0dFX5MERAUB38TqN5pXuYz9LZyuL+vA6UIQbSKzX/vS/1BrifOa88rItsN6un58xO85DnsVPVf3r52ymjATL5hjtyEq3gGZqTk0uBLoN4uf+5N6pvvAqGyec1HxnWH5s/GnaXzF6zvU1iw/YRDM1xztGmvzUnKzrFTz8YcEL9H2Vd9Of4iL96CcUSDzXJMZYV0XKEIH7lfUtxrUpTOQ0VrNaQvCW2zA9xSFEzRQcKYUy6I59D3uEVIEt0rdGdgrcEIS/qa/jGQ0zk2eT/S1K8yjzSFb34+XMSwY2fLB3Zptm06zW0qSxJrYfl9r8/M1p3JFk9OVphpUsWAd1OjQK6wgUOq57SC1rn9UzQCY+SUrsrHSVg5t4rKrqadx8RVG/RkJqkvuph0Yqle7YnbkkgdUDSqMJhIXJLxdpldmYjefB1mQB+AkgY9peiGMJhY8AvKwjlMUXaOscNgbMWjJUGceBJPVFO9vRQVsiH1y/EKN+qkcjj9ykaisZB6LztviDwNyA0ThxlNxk/sjUm6YDfCOoHW8XkfouNn//CFzWYr5d4m89HGkOEJR9K6fb6N8bjZN1E5fbTuKIi69hAl6ou/9FDE19KqEJRMMiUqOAk=
  - secure: qDCNzufZh5t/CAGswVxBEBTFbQtIIOkiIP+7Bln51OrHJGduVdM0mAN5gX4qEwL0TcuVAMb6ZLQQkqQuody6y5ahMl9Pq7XVsoIhQaXwY8eznNnC2VMu6IbDwUjCBoPbOvvzzAJ5pGDze8KklAe1auFGhZU5uSSY4eYXYYEVLEJElFF5gjhIql7gx+PYZ99hX4y1R2F6muux9rCj1hq+tQkXmazvTJJA0TOhBfBX79+gaYomHuyBc+Kn9u0vyzAbh0S9Cso6FSHnuZnPPrvSp+ULw50iHq4CodofQqUBEGIz9wmJ9d8erKM9vxT/MHWPzPzvd3qEbeHZIUXjwX+ZDN92wNidScJfh6EPK9m/g3XYxViiePec4BVTg5MNYUYyT1GOCtZTH5fHnR3QVXbelbY0RfE9w4aeoyDOUtQcjhleYyXtsZdHsgIYSjalVGSqVs2RSnaOwII0Fod6sV3+ETDW2NefGx73o14WH6gWHUSDxEcTColT1ykc3TMCU5sDGOTodxHvWXMHWruKwl+x9mFhHSCAGnx/gYo0/2mrDoouSPWNk+e3EuC+NcdGiyauDwhM3Lnkz0sP0uuReo28XKdJ8r0ntWFUmAmjcw3onGJMZOvwEkxNqXKvvme7ZHP8xAEh8yxRQIjt2f3fw1i6enC9Oo3NROLKpe0D5VVNaDM=
  - secure: MiXDosN5R+T90UJn9qPuwFYg56YsZtUJ/krKgAMz9tWTjoudYDQtNw04KPHN8UoySbqt5znbH352++yUpgP84Sk1eKqivpjvhS1QXDo/fsPJAOjiFzoxcmj490qpSoyzL2mbU7ODeMweT1ADjNzMA0aphdTuiSFu/W6kNI8OR+2HIUEUqTyE2Zd0zV4FFJoq5GaTJp+5zayqmgxhQQRaFnOeEXteekb0/x9rM1b1eQYX+BJUZgG7VwU1ebqux3n/8TemMOj040uUUuo8d31kNdGOeYHvamvrcv3EvuyoQhnvfsDKVwdNUOfHIG9H1PjTPtDSmpOyTtIHhArJQSvaCT7DSkpg8cJ9kUViXv4AyERvl0gceNDNSDgc+Lz55ilTlSbZUGnh6TunpLu4aluh4rTpoOyjGLFpsiq9xllDTlwkXNyU0lRCuMcPHddd84DsFAuCqOwH8i85uGWqzFPu42JJnYWgqp6hySYYse4ezjCSQ4N+mlu6nFDk/rboeGxZvwBFT4EP5tsQ4FUpGgnepi8xox0censHAsCK7BRaTzJHH/9gMO6DkfpCy7GnvT+KLjJm7BKqkFMRrtthYArQPYRZBd250qowLHw8WqTnwM5HEOERjW3/R3oGYC0Xt7yPEs9ms2kl3k67YcmdKIONO9zfH9odauHa0Tr5h8ewUkM=
